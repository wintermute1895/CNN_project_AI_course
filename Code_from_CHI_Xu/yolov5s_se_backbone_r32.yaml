# yolov5s_se_backbone_r32.yaml
# 基于你提供的 yolov5s_with_se.yaml (Backbone中已有SEBlock)
# 目标: 仅修改 Backbone 中 SEBlock 的 reduction_ratio (r) 参数为 32。
#       r=32 意味着SEBlock中间层的通道数更少 (c1 // 32)，模型更轻量，
#       计算效率更高，但可能牺牲一部分学习通道复杂依赖的能力。

# Parameters (与你原文件一致)
nc: 22
depth_multiple: 0.33
width_multiple: 0.50
anchors:
  - [10, 13, 16, 30, 33, 23]
  - [30, 61, 62, 45, 59, 119]
  - [116, 90, 156, 198, 373, 326]

# YOLOv5 v6.0 backbone (SEBlock 的 r 参数修改为 32)
backbone:                               # Layer | Output Channels (Actual)
  [[-1, 1, Conv, [64, 6, 2, 2]],       # 0     | 32
   [-1, 1, Conv, [128, 3, 2]],      # 1     | 64
   [-1, 3, C3, [128]],               # 2     | 64
   # SEBlock: 输入通道64, reduction_ratio r=32
   [-1, 1, SEBlock, [64, 32]],       # 3     | 64  <-- r 修改为 32
   [-1, 1, Conv, [256, 3, 2]],      # 4     | 128
   [-1, 6, C3, [256]],               # 5     | 128
   # SEBlock: 输入通道128, reduction_ratio r=32
   [-1, 1, SEBlock, [128, 32]],      # 6     | 128 <-- r 修改为 32
   [-1, 1, Conv, [512, 3, 2]],      # 7     | 256
   [-1, 9, C3, [512]],               # 8     | 256
   # SEBlock: 输入通道256, reduction_ratio r=32
   [-1, 1, SEBlock, [256, 32]],      # 9     | 256 <-- r 修改为 32
   [-1, 1, Conv, [1024, 3, 2]],     # 10    | 512
   [-1, 3, C3, [1024]],              # 11    | 512
   [-1, 1, SPPF, [1024, 5]],       # 12    | 512
  ]

# YOLOv5 v6.0 head (与你原文件一致，但请务必再次确认from索引的正确性！)
# 这部分的 from 索引必须与上面 backbone 最终的层序号和通道数严格对应。
head: [
    [-1, 1, Conv, [512, 1, 1]],      # 13, from L12
    [-1, 1, nn.Upsample, [None, 2, "nearest"]], # 14
    # 假设P4_SE来自层9
    [[-1, 9], 1, Concat, [1]],       # 15
    [-1, 3, C3, [512, False]],       # 16

    [-1, 1, Conv, [256, 1, 1]],      # 17, from L16
    [-1, 1, nn.Upsample, [None, 2, "nearest"]], # 18
    # 假设P3_SE来自层6
    [[-1, 6], 1, Concat, [1]],       # 19
    [-1, 3, C3, [256, False]],       # 20 (P3_detect_in)

    [-1, 1, Conv, [256, 3, 2]],      # 21, from L20
    # 假设这里的 P4_fused 来自层16
    [[-1, 16], 1, Concat, [1]],      # 22
    [-1, 3, C3, [512, False]],       # 23 (P4_detect_in)

    [-1, 1, Conv, [512, 3, 2]],      # 24, from L23
    # 假设这里的 P5_neck_in 来自层13
    [[-1, 13], 1, Concat, [1]],      # 25
    [-1, 3, C3, [1024, False]],      # 26 (P5_detect_in)

    [[20, 23, 26], 1, Detect, [nc, anchors]], # 27
  ]